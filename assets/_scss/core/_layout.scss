// ==============================================================================
// Global layout styles
// ==============================================================================

// CONFIG/MIXINS
// -----------------------------------------------------------------------------

// Quickly set grid-margins on a container across multiple breakpoints
@mixin layout-margins($property: padding, $negative: false, $sides: left right) {
  // grab the first value for default (mobile) screens
  $margins: first($layout-margins);
  
  // make it negative if $negative is set to true
  @if $negative == true {
    $margins: -(first($layout-margins));
  }
  
  // apply to all sides specified
  // -> left and right are defaults
  @each $side in $sides {
    #{$property}-#{$side}: $margins;
  }
  

  @if length($layout-margins) > 1 {
    @for $i from 1 through length($layout-margins) {

      // set up breakpoints for additional values
      @include breakpoint(nth($breakpoints, $i)) {
        
        // make it negative if $negative is set to true
        $margins: nth($layout-margins, $i);
        
        // make it negative if $negative is set to true
        @if $negative == true {
          $margins: -(nth($layout-margins, $i));
        }
        
        // apply to all sides specified
        // -> left and right are defaults
        @each $side in $sides {
          #{$property}-#{$side}: $margins;
        }
      }
    }
  }
}

// A helper to quickly create grid-span() includes across multiple breakpoints
// Saves having to write breakpoint calls over and over again
@mixin grid-span-break($cols, $start, $opts: false) {
  @include grid-span(nth($cols, 1), nth($start, 1), $options: $opts);

  @for $i from 1 through (length($cols) - 1) {
    $num: ($i + 1);
    @include breakpoint(nth($breakpoints, $num)) {
      @include grid-span(nth($cols, $num), nth($start, $num), $options: $opts);
    }
  }
}

@mixin scroll-y {
  overflow: auto;
  overflow-y: auto;
  overflow-x: hidden;
}

// GLOBAL MODIFIERS
// -----------------------------------------------------------------------------

%add-gutters {
  padding: 0 ($grid-gutter/2);
}

%max-width {
  margin: 0 auto;
  max-width: ($layout-width + (last($layout-margins) * 2));
}

%full-bleed {
  @include layout-margins(margin, $negative: true);
}

%margins, .margins {
  @include layout-margins(margin);
}

%center, .center {
  text-align: center;
}

// BASE LAYOUTS
// -----------------------------------------------------------------------------

html {
  width: 100%;
  height: 100%;
}

body {
  min-height: 100%;
  width: 100%;
  overflow: hidden;
  overflow-y: auto;
  overflow-x: hidden;

  @include breakpoint($breakpoint-header) {
    width: auto;
    overflow: auto;
  }
}

[role="main"], .main {
  // @extend %base-transition;
  // @include transform(translateX(0px));
  @include transition(left 0.3s ease);
  @include clearfix;
  position: relative;
  left: 0;
  padding-top: 0;
  padding-bottom: 0;
  // @include layout-margins;

  @include breakpoint($breakpoint-header) {
    margin-left: $header-w;
    width: calc(100% - $header-w);
  }
  

  // & > h1, & > h2, & > h3, & > h4, & > h5, & > h6, & > hgroup {
  //   @extend %wrapper;
  // }
}

// set up the "open menu" state for mobile screens
.menu-open {
  [role="main"], [role="banner"].global, footer.global {
    // @include transform(translateX($header-w));
    // @include transition(left 0.3s ease);
    left: $header-w;
  }

  [role="navigation"].global {
    left: 0;
    // @include transform(translateX(0px));
    @include transition(left 0.3s ease);
  }

  @include breakpoint($breakpoint-header) {
    [role="main"], [role="banner"] {
      left: 0;
    }
  }
}

%wrapper, .wrapper {
  @extend %max-width;
  @include clearfix;
  @include layout-margins;
  overflow: hidden;
  clear: both;
}

.feature {
  @extend %max-width;
  @include clearfix;
  @include rem(margin-top, -96px);
  position: relative;
  z-index: $z--med;
}
  .feature-copy {
    @extend %add-gutters;
    @include grid-span(3, 1);
    @include layout-margins;
    padding-top: $grid-gutter;
  }

  .feature-sidebar {
    // @extend %full-bleed;
    // @extend %add-gutters;
    @include grid-span(1, 4);
    padding: $grid-gutter;
    // @include layout-margins;
    padding-top: $grid-gutter;
    // @include rem(padding-top, $grid-gutter);
  }

    .feature-sidebar-thumb {
      display: block;
    }
