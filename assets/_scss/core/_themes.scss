/* ==============================================================================
//  Color themes
// ============================================================================== */

// Base
// ------------------------------------------------------------------------------

// theme generator mixin w/ defaults in the parameters
@mixin theme(
  $text: $color-text--secondary,
  $fg: $color-text--primary,
  $bg: white,
  $highlight: $color--highlight,
  $accent: $color--accent,
  $reverse: false
) {
  $border-color: darken($bg, 20);

  color: $fg;
  background: $bg;
  border-color: $border-color;
  border-style: solid;
  border-width: 0;

  & * {
    border-color: $border-color;
  }

  /* --- text ---------------------------------------------------------- */

  #{headers()} {
    color: $fg;

    & > a {
      color: inherit;
      text-decoration: none;

      &:hover, &:active {
        color: inherit;
      }
    }
  }

  p, li, td, dd {
    color: $text;
  }

  dt {
    color: $highlight;
  }

  .intro {
    color: darken($text, 10);
  }

  .secondary, aside, figcaption, small {
    @if $reverse == true {
      color: lighten($bg, 20);
    } @else {
      color: darken($text, 10);
    }
  }

  // links & icons
  a {
    color: $highlight;

    &:hover, &:active {
      @if $reverse == true {
        color: lighten($highlight, 10);
      } @else {
        color: darken($highlight, 10);
      }
    }

    &.active:hover, &.acive:active {
      @if $reverse == true {
        color: lighten($highlight, 10);
      } @else {
        color: darken($highlight, 10);
      }
    }
  }

  /* --- forms, buttons, icons ---------------------------------------------------------- */

  input, textarea {
    color: $text;

    @if $reverse == true {
      @include form-placeholder-color(lighten($bg, 20));
      background: lighten($bg, 5);
      border-color: darken($bg, 15);
    } @else {
      @include form-placeholder-color(darken($bg, 15));
      background: darken($bg, 5);
      border-color: darken($bg, 10);
    }

    &:focus {
      border-color: $highlight;
    }
  }

  button, .button {
    color: white;
    background: $highlight;
  }

  .icon {
    color: $highlight;
  }

  /* --- global modifiers ---------------------------------------------------------- */
  
  %theme-text {
    color: $text;
  }

  %theme-border {
    border-color: $border-color;
  }

  %theme-color {
    color: $fg;
  }

  %theme-bg {
    border-color: $border-color;
  }

  // accent that jumps out
  %highlight, .highlight {
    color: $highlight;
  }

  %highlight-border, .highlight-border {
    border-color: $highlight !important;
  }

  %highlight-bg {
    background-color: $highlight;
  }
  
  // subtler accent
  %accent, .accent {
    color: $accent;
  }

  %accent-border, .accent-border {
    border-color: $accent !important;
  }

  // slightly 'sunken' from surrounding bg
  $well: darken($bg, 5);

  %well, .well {
    background: $well;
  }
  
  // for 'hidden' border (same color as bg)
  %well-hidden-border {
    border-color: $well;
  }
  
  // slightly 'raised' from surrounding bg
  %island, .island {
    background: lighten($bg, 5);
  }
}

/* Default
// ------------------------------------------------------------------------------ */

%theme-default, .theme-default, body {
  @include theme(); //use all defaults
}

@mixin restore-default-theme() {
  @include theme();
  background: transparent;
}

/* Variations
// ------------------------------------------------------------------------------ */

/* bright colored background, meant to stand out or add accent */
%theme-flood, .theme-flood {
  @include theme(
    $text: white,
    $fg: white,
    $bg: $color--highlight,
    $highlight: $color-text--primary,
    $accent: $color-text--primary,
    $reverse: true
  );
}

/* light FG over dark BG, contrasts sharply with default (dark FG over light BG) */
%theme-reverse, .theme-reverse {
  @include theme(
    $text: white,
    $fg: white,
    $bg: $color--reverse,
    $highlight: $color--highlight,
    $accent: lighten($color-text--primary, 10),
    $reverse: true
  );
}